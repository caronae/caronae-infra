#cloud-config

ssh_authorized_keys:
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDL9qZDkCmWYXAFjTHJJjWi6Fk2+2P/1ZSVeDGoHhcOSqwq3TSqzg/Rft8jRhTMOQ9lbGXC+qke94X0VMeUw6e+MbtDAi+QNDfq8NOu0fXJe+ngKlN4nzW935e+LqtmN6CytCrL9w4LNPzKcQANFb+g/YzMeoedWLvAkgmqKXXby30/Qz4B5JwPXUMFnvrNw+HsiHaNUc15xLoTPzS11mfREXqbZcFia+uTeMbDqcOcflXP313Jr6l4/wW7nBdbST3wy4L1ylSS3JrwLXkFnTiNuDjOi5uhMxK4VhzDXwEcpqZV9wBFssc6QomKgX2cMSMDGwcLoZi3oukJY+mEadGLDZa7LnjkvuMo91rETTSE1Kjl9n3JoTplF5QM6t7NHqPtFfjbuHSNNQ4egYOsiLQTVx/WBOZTj65UWEptnUpkv6VVi5vp5FoemigzRIxMk/AR1rn7VlxY/gcDtydEhKIZ1eP04dVyqgOMSem4IdXiPoChOb+jRsoxM+T6pl4xPLqL5Qoi8E8LTgEkysABktx98ZfYDC4m7WV+1Hp2CsP9eZ5hV1Buv9GQbmKkNJQyQi9IpDqwbVEKHQB/Wg3nW9/S51GxZmUS1l0m4Q2WMEBPncGuhq5MndGW3HjeAbyXiJzqUL1u7GcnTSE3F1PdrAlGlZQmnfpS1BZ4jbZ7KI+nPw== TW-mcecchi
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDIAvy3fgLDLMlsojze1eY5mEkPCfy6SP+LcxlCD3rIF2ZMBHj5xeCpMEmHR1AXoOTWY2GrKaOI3rzg5AKeisTS5e/92859q/HDjDQunj7Q8JzaqsGtwukyWsCeHI/sgZOraADy5BG5lgOKQ244dfDFytZqseo0/kaWMvv2DRGcsSMCfJtn0QBP9lnlik16Fn716r+r7Z1YLiZaO0Tz977PSlewZomVDBja+0VXaCFAp3dBZ3fqJbCpCz6C0ajTu6beQbSqSuy/rwmB5wq9ZOFF33Yld3FQdkYGIYGHPk5yLGhCv+0R0Pg+eSDE5z/TC/7O10e5CAgLEWkl+7bCO8MZ lhanke@thoughtworks.com
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDhkF8DSy5yNjc5qWWlztbgY8KkmJY2z5sBzgIBPBmzL0ftdibki/BokEpnYpFXsNnynWYTDPeBRMfELgCKGMHooTH7Vhse66s6zRSckgHWNfKT51efzVO2AQf4O/TxjPY5Fn4/kGoyqA1C/+CH3CcRV4D4TOYxcHcOjGdGJTiYghs5En3w/xNQB9/IkNmdJAMlsy/fM+BIDxHnnH9UN2owtELLzR1Mk0iDm/N/o6789lPZSlQWfl+JQrh3q82qtb0BuT2b4+jzz+W0VESsnkClFvcgR6C/uJTjK+FtPZx//rswxuzZOF1WMsZBK+0lxvLrf2gv7xcTV82ZsMKtvv2R macecchi@Cecchis-MBP.local
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQClyB1T4F7GuYQm8NqW/uvI7ukh1LkOHozBFrL0YbYcDzVvOT/8CUXEgw46TkA4LNGV3mBa/DKhzqhsDFl2RGWPfVjeUHeEnasv+hPF0cBhN30AN/mlCbZgoCmGs2oQtGZATfIBIm1DuoH3Y63/ripMB1U6GIAp6yIR6g9BLn9c/yi49gEuGCq1EQbYboLL5SbQDiguIZE327hGHW4XTcP4qI6BpleZ9iYPpOcWdTvuE5qAbFuUjX7oxEvBPuTWLyh/bgll0MBhrmwdqBWKGTbNgNxuPPmn58BZG44T9C/uTkRO8G7/VeLpnJFIj0np9vDzSYa+1occg/S6wjqpQoHd mcecchi@LAmcecchi

write_files:
  - path: /tmp/.encrypted_envs.base64
    content: "${encrypted_envs}"
  - path: /etc/cron.d/update-cert
    content: |
      @daily ec2-user sudo /usr/local/bin/certbot-auto renew --no-self-upgrade

packages:
  - git
  - docker

runcmd:
  - pip install docker-compose
  - usermod -a -G docker ec2-user
  - service docker start
  - mkdir /var/caronae

  - wget https://dl.eff.org/certbot-auto
  - chmod +x certbot-auto
  - mv certbot-auto /usr/local/bin/certbot-auto
  - /usr/local/bin/certbot-auto -n certonly --debug --standalone --agree-tos -m macecchi@gmail.com -d ${api_domain},${ufrj_domain},${site_domain}
  - chgrp -R docker /etc/letsencrypt
  - chmod -R g=rX /etc/letsencrypt
  - mkdir /var/caronae/certs
  - ln -s /etc/letsencrypt/live/${api_domain}/fullchain.pem /var/caronae/certs/
  - ln -s /etc/letsencrypt/live/${api_domain}/privkey.pem /var/caronae/certs/

  - cat /tmp/.encrypted_envs.base64 | base64 -di > /tmp/.encrypted_envs
  - aws kms decrypt --region ${region} --ciphertext-blob fileb:///tmp/.encrypted_envs --output text --query Plaintext | base64 --decode > /var/caronae/.env
  - chown -R ec2-user:ec2-user /var/caronae

  - cd /var/caronae
  - git clone https://github.com/caronae/caronae-site.git
  - git clone https://github.com/caronae/caronae-docker.git
  - mv .env caronae-docker/
  - docker volume create postgres
  - docker volume create redis
  - CARONAE_ENV_TAG=${image_tag} /usr/local/bin/docker-compose -f caronae-docker/docker-compose.yml -f caronae-docker/docker-compose.prod.yml up -d --build
